// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  income
  expense
}

model User {
  id        String      @id @default(cuid())
  email     String      @unique
  name      String?
  password  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  accounts  Account[]
  categories Category[]
  txs       Transaction[]
}

model Account {
  id        String   @id @default(cuid())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  txs       Transaction[]

  @@index([userId])
}

model Category {
  id        String   @id @default(cuid())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  txs       Transaction[]

  @@index([userId])
}

model Transaction {
  id          String          @id @default(cuid())
  date        DateTime
  description String
  amount      Decimal         @db.Decimal(12,2)
  type        TransactionType
  user        User            @relation(fields: [userId], references: [id])
  userId      String
  account     Account?        @relation(fields: [accountId], references: [id])
  accountId   String?
  category    Category?       @relation(fields: [categoryId], references: [id])
  categoryId  String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  @@index([userId])
  @@index([date])
  @@index([accountId])
  @@index([categoryId])
}
